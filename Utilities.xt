//generate  laravel docker artifact
https://phpdocker.io/generator

//create a lavarel projec base on lavarel version
composer create-project --prefer-dist laravel/laravel=5.2.* chapter-01
composer create-project laravel/laravel=5.6.12 project --prefer-dist 

//get into erminal to fire artisan command
docker-compose exec php-fpm bash
//for esemple
php artisan list 
php  artisan h  migrate // see help for migrate command 
php  artisan h  make:controller
sample 
php  artisan make:controller BandController //create a controller
php  artisan make:model Band //create a model
php  artisan  make:model  Bike -m //use -m to create migration together with model creation
php artisan migrate:fresh --seed  //migrate and refresh
run "composer dump-autoload" when class not found 

//check DB connection
php artisan tinker 
DB::connection()->getPdo(); 

//create a migraion file
php artisan make:migration create_bands_table  //create migration file in database/migrations
php artisan migrate  //to create migration
php artisan db:seed //To seed
//commad to enter mysql inside docker container
docker-compose exec mysql mysql -ularavel-angular-book -p123456 

//create a CRUD API controller
php artisan make:controller BandController --resource 
php artisan make:controller API/BuilderController --api 

//insall swagger
composer require "darkaonline/l5-swagger" 
composer require "darkaonline/l5-swagger:5.8.*" --with-all-dependencies //for laravel 5
php artisan vendor:publish --provider "L5Swagger\L5SwaggerServiceProvider"  //to publish the package

php  artisan  l5-swagger:generate //publish swagger documentation
//helper link to resolve problem with swagger doc generation
https://www.cnblogs.com/mouseleo/p/12074708.html
https://github.com/DarkaOnLine/L5-Swagger/blob/634469942ad015199aea33eb5f2ce25b97abec1b/tests/storage/annotations/OpenApi/Anotations.php
https://github.com/zircote/swagger-php/blob/master/Examples/example-object/example-object.php
https://github.com/zircote/swagger-php/blob/master/Examples/petstore.swagger.io/controllers/PetController.php

//installing JWT
//open project/composer.json and add to require
"tymon/jwt-auth": "1.0.*"
run composer update
insall the package=>php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\LaravelServiceProvider" 
Generate a secret =>  php artisan jwt:secret 


Stop page 188