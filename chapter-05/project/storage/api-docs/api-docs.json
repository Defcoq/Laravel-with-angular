{
    "openapi": "3.0.0",
    "info": {
        "title": "Custom Bikes",
        "description": "Class ApiController",
        "contact": {
            "name": "Developer Contact",
            "url": "https://www.example.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/bikes": {
            "get": {
                "tags": [
                    "Bikes"
                ],
                "summary": "List Bikes",
                "description": "Display a listing of the resource.",
                "operationId": "App\\Http\\Controllers\\API\\BikeController::index",
                "responses": {
                    "200": {
                        "description": "Success: List all Bikes"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bikes"
                ],
                "summary": "Create Bike",
                "description": "Store a newly created resource in storage.",
                "operationId": "App\\Http\\Controllers\\API\\BikeController::store",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the pet",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Updated status of the pet",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Bike"
                    },
                    "401": {
                        "description": "Refused: Unauthenticated"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/bikes/{id}": {
            "get": {
                "tags": [
                    "Bikes"
                ],
                "summary": "Get Bike by Id",
                "description": "Display the specified resource.",
                "operationId": "App\\Http\\Controllers\\API\\BikeController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified bike by id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Bike"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bikes"
                ],
                "summary": "Update Bike",
                "description": "Update the specified resource in storage.",
                "operationId": "App\\Http\\Controllers\\API\\BikeController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified bike by id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the pet",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Updated status of the pet",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: Return the Bike updated"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bikes"
                ],
                "summary": "Delete bike",
                "description": "Delete the specified bike by id",
                "operationId": "App\\Http\\Controllers\\API\\BikeController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bike id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/builders": {
            "get": {
                "tags": [
                    "Builders"
                ],
                "summary": "List Builders",
                "description": "Display a listing of the resource.",
                "operationId": "App\\Http\\Controllers\\API\\BuilderController::index",
                "responses": {
                    "200": {
                        "description": "Success: List all Builders"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Builders"
                ],
                "summary": "Create Builder",
                "description": "Store a newly created resource in storage.",
                "operationId": "App\\Http\\Controllers\\API\\BuilderController::store",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the pet",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Updated status of the pet",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Builder"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/builders/{id}": {
            "get": {
                "tags": [
                    "Builders"
                ],
                "summary": "Get Builder by Id",
                "description": "Display the specified resource.",
                "operationId": "App\\Http\\Controllers\\API\\BuilderController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Builder by id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Builder"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Builders"
                ],
                "summary": "Update Builder",
                "description": "Update the specified resource in storage.",
                "operationId": "App\\Http\\Controllers\\API\\BuilderController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Builder by id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the pet",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Updated status of the pet",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: Return the Builder updated"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Builders"
                ],
                "summary": "Delete Builder",
                "description": "Delete the specified Builder by id",
                "operationId": "App\\Http\\Controllers\\API\\BuilderController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Builder id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "List Items",
                "description": "Display a listing of the resource.",
                "operationId": "App\\Http\\Controllers\\API\\ItemController::index",
                "responses": {
                    "200": {
                        "description": "Success: List all Items"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Create Item",
                "description": "Store a newly created resource in storage.",
                "operationId": "App\\Http\\Controllers\\API\\ItemController::store",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the pet",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Updated status of the pet",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Item"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/items/{id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get Item by Id",
                "description": "Display the specified resource.",
                "operationId": "App\\Http\\Controllers\\API\\ItemController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Item by id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Item"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Update Item",
                "description": "Update the specified resource in storage.",
                "operationId": "App\\Http\\Controllers\\API\\ItemController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Item by id.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the pet",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Updated status of the pet",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: Return the Item updated"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Delete Item",
                "description": "Delete the specified Item by id",
                "operationId": "App\\Http\\Controllers\\API\\ItemController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/bikes/{bike_id}/ratings": {
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "rating a Bike",
                "description": "Store a newly created resource in storage.",
                "operationId": "App\\Http\\Controllers\\API\\RatingController::store",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bike Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the pet",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Updated status of the pet",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Rating"
                    },
                    "401": {
                        "description": "Refused: Unauthenticated"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/projects": {
            "get": {
                "operationId": "App\\Http\\Controllers\\ProjectsController::index",
                "responses": {
                    "200": {
                        "description": "Display a listing of projects."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Bike": {
                "required": [
                    "make",
                    "model",
                    "year",
                    "mods"
                ],
                "properties": {
                    "make": {
                        "description": "Company name",
                        "type": "string",
                        "example": "Harley Davidson, Honda, Yamaha"
                    },
                    "model": {
                        "description": "Motorcycle model",
                        "type": "string",
                        "example": "Xl1200, Shadow ACE, V-Star"
                    },
                    "year": {
                        "description": "Fabrication year",
                        "type": "string",
                        "example": "2009, 2008, 2007"
                    },
                    "mods": {
                        "description": "Motorcycle description of modifications",
                        "type": "string",
                        "example": "New exhaust system"
                    },
                    "picture": {
                        "description": "Bike image URL",
                        "type": "string",
                        "example": "http://www.sample.com/my.bike.jpg"
                    }
                },
                "type": "object"
            },
            "Builder": {
                "required": [
                    "name",
                    "description",
                    "location"
                ],
                "properties": {
                    "name": {
                        "description": "Builder name",
                        "type": "string",
                        "example": "Jesse James"
                    },
                    "description": {
                        "description": "Famous Motorcycle builder from Texas",
                        "type": "string",
                        "example": "Austin Speed Shop"
                    },
                    "location": {
                        "description": "Texas/USA",
                        "type": "string",
                        "example": "Austin, Texas"
                    }
                },
                "type": "object"
            },
            "Garage": {
                "required": [
                    "name",
                    "custumer_level"
                ],
                "properties": {
                    "name": {
                        "description": "Jhonny Garage",
                        "type": "string",
                        "example": "Exhaust"
                    },
                    "customer_level": {
                        "description": "Whats the garage level",
                        "type": "integer",
                        "example": "10"
                    }
                },
                "type": "object"
            },
            "Item": {
                "required": [
                    "type",
                    "name",
                    "company"
                ],
                "properties": {
                    "type": {
                        "description": "Item Type",
                        "type": "string",
                        "example": "Exhaust"
                    },
                    "name": {
                        "description": "Item name",
                        "type": "string",
                        "example": "2 into 1 Exhaust"
                    },
                    "company": {
                        "description": "Produced by: some company",
                        "type": "string",
                        "example": "Vance and Hines"
                    }
                },
                "type": "object"
            },
            "Rating": {
                "required": [
                    "bike_id",
                    "user_id",
                    "rating"
                ],
                "properties": {
                    "biker_id": {
                        "description": "Bike id",
                        "type": "integer",
                        "example": "1"
                    },
                    "user_id": {
                        "description": "User id",
                        "type": "integer",
                        "example": "2"
                    },
                    "rating": {
                        "description": "Vote by rating",
                        "type": "integer",
                        "example": "10"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "description": "User name",
                        "type": "string",
                        "example": "John Conor"
                    },
                    "email": {
                        "description": "Email Address",
                        "type": "string",
                        "example": "john.conor@terminator.com"
                    },
                    "password": {
                        "description": "A very secure password",
                        "type": "string",
                        "example": "123456"
                    }
                },
                "type": "object"
            }
        }
    }
}